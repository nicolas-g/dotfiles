# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  # # Ansible lint roles
  # - repo: https://github.com/zerodowntime/ansible-lint-roles-precommit-hook.git
  #   rev: v1.0.0
  #   hooks:
  #     - id: ansible-lint-roles
  #       files: /tasks/ # reflects tasks
  #       exclude: (roles.d) # I have own roles in `roles` dir and 3rd-party roles in `roles.d`
  #       args: [-c, .ansible-lint.yml]
  #       stages: [commit]

  # Ansible lint playbooks
  - repo: https://github.com/ansible/ansible-lint.git
    rev: v5.0.0a3
    hooks:
      - id: ansible-lint
        name: Ansible lint for playbooks
        types: [text, yaml] # reflects yaml changes
        files: /playbooks/ # we have all playbooks in 1 dir so we can contrain its path
        args: [-c, .ansible-lint.yml]
        pass_filenames: true
        always_run: false
        #stages: [manual] # I have it manually because in playbooks I use `lookup env pwd` which breaks my paths
        stages: [commit]

  # Ansible lint inventory
  - repo: https://github.com/ansible/ansible-lint.git
    rev: v5.0.0a3
    hooks:
      - id: ansible-lint
        name: Ansible lint for inventory
        types: [text, yaml] # reflects yaml changes
        files: /inventory/
        exclude: vault
        args: [-c, .ansible-lint.yml]
        pass_filenames: true
        always_run: false
        stages: [commit]

  # - repo: https://github.com/ansible/ansible-lint.git
  #   rev: v4.2.0
  #   hooks:
  #     - id: ansible-lint
  #       name: ansible-lint-NG
  #       # always_run: true
  #       pass_filenames: false
  #       # files: \.(yaml|yml)$
  #       types: [text, yaml]
  #       # verbose: true
  #       args: [-c, .ansible-lint.yml]
  #       #entry: env ANSIBLE_LIBRARY=./library ansible-lint --force-color -p
  #       #entry: ansible-lint

  # - repo: https://github.com/adrienverge/yamllint.git
  #   rev: v1.20.0
  #   hooks:
  #     - id: yamllint
  #       files: \.(yaml|yml)$
  #       types: [file, yaml]
  #       entry: yamllint --strict -f parsable

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.4.0
    hooks:
      - id: trailing-whitespace
      - id: check-merge-conflict
      - id: detect-aws-credentials
      - id: detect-private-key
      - id: requirements-txt-fixer
        # - id: end-of-file-fixer
        # - id: mixed-line-ending
        # - id: check-byte-order-marker
        # - id: check-executables-have-shebangs
        # - id: debug-statements
        # - id: flake8
        # - id: check-yaml
        types: [yaml]
        #files: .*\.(yaml|yml)$

        # github.com/jumanjihouse/pre-commit-hooks
        # markdownlint
        # shellcheck
        #
        # github.com/Lucas-C/pre-commit-hooks-nodejs
        # markdown-toc
        #
        # github.com/detailyang/pre-commit-shell
        # shell-lint
        #
        # github.com/bemeurer/beautysh
        # beautysh
        #
        # github.com/antonbabenko/pre-commit-terraform
        # terraform_fmt # Rewrites all Terraform configuration files to a canonical format.
        # terraform_docs # Inserts input and output documentation into README.md (using terraform-docs).
        # terraform_docs_without_aggregate_type_defaults # Inserts input and output documentation into README.md (using terraform-docs).
        # terraform_docs_replace # Overwrite content of README.md with terraform-docs.
        # terraform_validate # Validates all Terraform configuration files.
        # terraform_tflint # Validates all Terraform configuration files with TFLint.
        # terragrunt_fmt # Rewrites all Terragrunt configuration files to a canonical format.
        #
        # github.com/openstack-dev/bashate
        # bashate - This hook runs bashate for linting shell scripts
        #
        # github.com/codespell-project/codespell
        # codespell - Checks for common misspellings in text files.

        #

  #- repo: https://github.com/openstack-dev/bashate
  - repo: https://github.com/openstack/bashate
    rev: 2.0.0
    hooks:
      - id: bashate
        name: bashate
        description: This hook runs bashate for linting shell scripts
        entry: bashate
        language: python
        types: [shell]
        verbose: true

  - repo: https://github.com/milin/giticket
    rev: v1.1
    hooks:
      - id: giticket
        args: ["--regex=TOK-[0-9]", "--format={ticket} {commit_msg}"] # Optional

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v2.2.1
    hooks:
      - id: prettier
