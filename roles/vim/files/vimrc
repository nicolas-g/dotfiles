

" Automatically install vim-plug if Vim starts without it
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Call the .vimrc.plug file
if filereadable(expand("~/.vimrc.plug"))
    source ~/.vimrc.plug
endif


set runtimepath^=~/.vim/bundle/ctrlp.vim "for usage instructions and configuration details -> :help ctrlp.txt

set encoding=utf-8

set diffopt=filler,context:0 "suppress common lines and only show the diffs

autocmd BufWritePre * %s/\s\+$//e "remove all trailing whitespace

set clipboard=unnamed "copy stuff from vim to OS buffer

au BufRead,BufNewFile */*Ansible/*.yml set filetype=yaml.ansible

" # turn off auto-insert of comments
augroup auto_comment
    au!
    au FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
augroup END

"
" NERDTree
"
" Map `Ctrl+n` to open NERDTree
map <C-n> :NERDTreeToggle<CR>

" default arrows
"let g:NERDTreeDirArrowExpandable = '▸'
"let g:NERDTreeDirArrowCollapsible = '▾'

" add the proper PEP 8 indentation
au BufNewFile,BufRead *.py set tabstop=4 softtabstop=4 shiftwidth=4 textwidth=79 expandtab autoindent fileformat=unix

" For other full stack development
au BufNewFile,BufRead *.js, *.html, *.css set tabstop=2 softtabstop=2 shiftwidth=2

" make your code look pretty after installing syntastic and vim-flake8 plugins
let python_highlight_all=1
syntax on

set spell spelllang=en,programming " (or `en_us`)
set spellfile=~/src/nicolas-g/dotfiles/vimspellen.utf-8.add "  the name of your spellfile must end in .{encoding}.add where {encoding} is the character encoding of the file

" wrap at 68 characters and turn on spell checking, but only for Git commit messages
au FileType gitcommit set tw=68 spell

" Syntastic Plugin settings
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" Syntastic  https://github.com/juliosueiras/vim-terraform-completion#minimal-configuration
" (Optional)Remove Info(Preview) window
set completeopt-=preview

" (Optional)Hide Info(Preview) window after completions
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

" (Optional) Enable terraform plan to be include in filter
let g:syntastic_terraform_tffilter_plan = 1

" (Optional) Default: 0, enable(1)/disable(0) plugin's keymapping
let g:terraform_completion_keys = 1

" (Optional) Default: 1, enable(1)/disable(0) terraform module registry completion
let g:terraform_registry_module_completion = 0

" https://github.com/hashivim/vim-terraform#usage
let g:terraform_align=1
let g:terraform_fold_sections=0
let g:terraform_fmt_on_save=1
