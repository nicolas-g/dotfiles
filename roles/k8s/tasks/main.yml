---
- block:
    - name: k8s | Include brew_install.yml
      import_tasks: "../../../roles/shared/tasks/brew_cask_install.yml"
      vars:
        brew_cask_packages: "{{ k8s_brew_cask_packages }}"
      when: ansible_os_family == 'Darwin'

    - name: k8s | Include brew_install.yml
      import_tasks: "../../../roles/shared/tasks/brew_install.yml"
      vars:
        brew_packages: "{{ k8s_brew_packages }}"

    - name: k8s | Deploy {{ home_dir }}/.zshrc.d/
      template:
        src: gke_cloud_auth.zsh.j2
        dest: "{{ home_dir }}/.zshrc.d/gke_cloud_auth.zsh"
        mode: 0644
        owner: "{{ user }}"
        group: "{{ group }}"

    # https://github.com/ahmetb/kubectl-aliases/blob/master/.kubectl_aliases
    - name: k8s | Deploy {{ home_dir }}/.aliases.d/{{ item }}
      copy:
        src: "{{ item }}_aliases"
        dest: "{{ home_dir }}/.aliases.d/{{ item }}"
        mode: 0644
        owner: "{{ user }}"
        group: "{{ group }}"
      with_items:
        - "docker"
        - "kubectl"
      tags: ["aliases", "k8s-aliases"]

    - name: k8s | kubectl krew install plugins # noqa 305 Use shell only when shell functionality is required
      shell: "kubectl krew install {{ item }}"
      register: cmd_result
      changed_when: '"it is already installed" not in cmd_result.stderr'
      loop:
        - datree
        - discover
        - get-all # Like `kubectl get all` but _really_ everything
        - liqo
        - kc #List, switch, add, delete and more interactive operations to manage kubeconfig.
        - permissions #This plugin lets you trace ServiceAccounts to Roles, RoleBindings and permissions to troubleshoot the bindings and transitive permission assignments.
        - unlimited # Display information about running containers with no CPU and memory limits set so you can detect potential noisy neighbors and optimize cluster's performance and resource consumption.
        - neat
        - nodepools # List node pools/groups in the current cluster, alongside a count of how many nodes there are in each pool/group and their type.
        - oomd # Display pods and their corresponding containers which have recently been 'OOMKilled'
        - preflight
        - rbac-tool # visualize, config etc..
        - resource-capacity
        - starboard # Toolkit for finding risks in kubernetes resources
        - support-bundle
        - tunnel # ktunel
        - view-secret
        #
        ## The bellow krew plugins don't support M1 Architecture yet
        #
        # - advise-psp # Suggests PodSecurityPolicies for cluster.
        # - doctor # Scans your cluster and reports anomalies.
        # - kubesec-scan # Scan Kubernetes resources with kubesec.io.
        # - multinet # outputs Pods' network-status
        # - popeye # Scans your clusters for potential resource issues
        # - volsync
      tags: krew

    - name: k8s | Create {{ home_dir }}/.datree dir
      file:
        path: "{{ home_dir }}/.datree"
        state: directory
        mode: 0755
        owner: "{{ user }}"
        group: "{{ group }}"
      tags: datree

    - name: k8s | Deploy {{ home_dir }}/.datree/config.yaml
      template:
        src: datree_config.yaml.j2
        dest: "{{ home_dir }}/.datree/config.yaml"
        mode: 0644
        owner: "{{ user }}"
        group: "{{ group }}"
      tags: datree

    - name: k8s | Import upbound.yml
      import_tasks: "upbound.yml"

    - name: k8s | Deploy {{ home_dir }}/.zshrc.d/docker_exports.zsh
      copy:
        src: docker_exports.zsh
        dest: "{{ home_dir }}/.zshrc.d/docker_exports.zsh"
        mode: 0644
        owner: "{{ user }}"
        group: "{{ group }}"

  tags: k8s
